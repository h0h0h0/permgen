/* ----------------------------------------------------------------------------
 * QAS On Demand > (c) QAS Ltd > www.qas.com
 *
 * Common Classes > QasException.java
 * Exception thrown by this package
 * ----------------------------------------------------------------------------
 */
package com.qas.newmedia.internet.ondemand.product.proweb;

import java.io.Writer;
import java.io.PrintWriter;
import java.io.StringWriter;

/**
 * Exception class for this package.  Integrators should catch these exceptions in their code
 * and not the lower level SOAP package exceptions.
 */
public class QasException extends java.lang.Exception {
    /** error generated by proweb package */
    public static final int CLIENT_ERROR = 0;
    /** server error that does not have an error number */
    public static final int UNKNOWN_SERVER_ERROR = 1;
    /** non-Axis RemoteException potentially thrown by soap package */
    public static final int UNKNOWN_COMMS_ERROR = 2;
    /** error generated by the XML parsing */
    public static final int XML_PARSING_ERROR   = 3;
    /** error generated by the WebSphere MQ communication */
    public static final int WEBSPHERE_MQ_ERROR  = 4;
    /** error generated by the TCP/IP communication */
    public static final int TCPIP_ERROR  = 5;

	public static final int INSUFFICIENT_CREDITS = 6;
	public static final int USER_AUTHENTICATION_INVALID = 7;
	public static final int LICENSE_INVALID = 8;
	public static final int SERVER_UNAVAILABLE = 9;

    /** This will either be the error code set by the server or one of the constants defined in this class */
    private int m_QasErrorNumber;
    private String[] errorDetail;
    // -------------------------------------------------------------------------
    /**
     * Creates new <code>QasException</code> without detail message.
     */
    public QasException() {
        m_QasErrorNumber = CLIENT_ERROR;
    }

    // -------------------------------------------------------------------------
    /**
     * Constructs an <code>QasException</code> with the specified detail message.
     * @param msg the detail message.
     */
    public QasException(String msg, int iErrorNumber) {
        super(msg + " [" + iErrorNumber + "]");
        m_QasErrorNumber = iErrorNumber;
    }

    public QasException(String msg, int iErrorNumber, String[] errorDetail) {
        super(msg + " [" + iErrorNumber + ": " + errorDetail[0] + "]");
        m_QasErrorNumber = iErrorNumber;
        this.errorDetail = errorDetail;
    }

    // -------------------------------------------------------------------------
    /**
     * Returns the QAS error code number
     */
    public int getErrorNumber() {
        return m_QasErrorNumber;
    }

    public String toString() {
        return getClass().getName() + " - " + getMessage();
    }

    /** Utility that returns the stack trace of this exception as a <code>String</code> */
    public String stackTraceToString() {
        final Writer result = new StringWriter();
        final PrintWriter printWriter = new PrintWriter( result );
        printStackTrace( printWriter );
        return result.toString();
    }

    public String errorDetail() {
        String errDetail = "";
        if (errorDetail == null) {
            return "";
        }
        for (int i = 0; i < errorDetail.length; i++) {
            errDetail += errorDetail[i] + "\n";
        }
        return errDetail;
    }

}
